services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: dev
    ports:
      - "5430:5432"
    volumes:
      - /private/var/lib/postgresql:/var/lib/postgresql
    networks:
      - postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${IPV4}:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    container_name: kafka-ui
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=${IPV4}:29092
      - KAFKA_CLUSTERS_0_NAME=r4zt_wrqTRuT7W2NJsB_GA

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - /opt/minio/data:/data
    environment:
      MINIO_ROOT_USER: "admin"
      MINIO_ROOT_PASSWORD: "admin12345"

    command: server /data --console-address ":9001"

  clickhouse:
    image: clickhouse/clickhouse-server:24.11
    container_name: clickhouse-server
    ports:
      - "8123:8123"
    volumes:
      - ./data:/var/lib/clickhouse
      - ./logs:/var/log/clickhouse-server
      - ./users.xml:/etc/clickhouse-server/users.d/users.xml
    restart: always


#  tracker:
#    depends_on:
#      - postgres
#    build:
#      context: .
#      dockerfile: Dockerfile
#    environment:
#      DB_URL: postgres
#      DB_PASS: postgres_password
#      DB_USER: postgres_user
#    ports:
#      - "8080:8080"
#    networks:
#      - postgres


networks:
  postgres:
    driver: bridge